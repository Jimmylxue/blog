import{_ as n,c as s,o as a,a as p}from"./app.8d6a93de.js";const h='{"title":"\u5927\u6587\u4EF6\u4E0A\u4F20","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6587\u4EF6\u4E0A\u4F20\u601D\u8DEF","slug":"\u6587\u4EF6\u4E0A\u4F20\u601D\u8DEF"},{"level":3,"title":"\u524D\u7AEF","slug":"\u524D\u7AEF"},{"level":3,"title":"\u540E\u7AEF","slug":"\u540E\u7AEF"},{"level":2,"title":"\u8FDB\u5EA6\u6761\u7684\u663E\u793A","slug":"\u8FDB\u5EA6\u6761\u7684\u663E\u793A"},{"level":3,"title":"\u901A\u8FC7onUploadProgress\u4E8B\u4EF6\u6765\u76D1\u542C\u53D8\u5316","slug":"\u901A\u8FC7onuploadprogress\u4E8B\u4EF6\u6765\u76D1\u542C\u53D8\u5316"},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3"}],"relativePath":"article/\u8FDB\u9636/\u5927\u6587\u4EF6\u4E0A\u4F20.md","lastUpdated":1640586747459}',t={},o=p(`<h1 id="\u5927\u6587\u4EF6\u4E0A\u4F20" tabindex="-1">\u5927\u6587\u4EF6\u4E0A\u4F20 <a class="header-anchor" href="#\u5927\u6587\u4EF6\u4E0A\u4F20" aria-hidden="true">#</a></h1><p>\u6BD5\u4E1A\u5DF2\u7ECF\u534A\u5E74\u4E86\uFF0C\u81F3\u4ECA\u5728\u771F\u6B63\u4EA7\u54C1\u7EA7\u7684\u9879\u76EE\u91CC\u9762\u6211\u8FD8\u6CA1\u6709\u9047\u5230\u8FC7\u6587\u4EF6\u4E0A\u4F20\u7684\u9700\u6C42\uFF0C\u552F\u4E00\u9047\u5230\u7684\u6587\u4EF6\u4E0A\u4F20\u7684\u9700\u6C42\u8FD8\u662F\u5728\u81EA\u5DF1\u7B80\u5355\u7684\u6BD5\u8BBE\u4E2D\u6709\u4E0A\u4F20\u7528\u6237\u5934\u50CF\u7684\u8FD9\u4E2A\u5C0F\u529F\u80FD\uFF0C\u90A3\u65F6\u5019\u6211\u53EA\u662F\u4E00\u4E2A<code>axios.post()</code>\uFF0C\u53EF\u80FD\u56E0\u4E3A\u56FE\u7247\u90FD\u6BD4\u8F83\u5C0F\u5427\uFF0C\u6210\u529F\u4E86\uFF0C\u4F46\u662F\u4E5F\u6709\u5F88\u591A\u7684 bug\uFF1A</p><ul><li>\u6587\u4EF6\u4E0D\u80FD\u8FC7\u5927\uFF0C\u4E00\u8FC7\u5927\u76F4\u63A5\u5954\u6E83</li><li>\u6BCF\u6B21\u4E0A\u4F20\u65F6\uFF0C\u67E5\u770B\u7CFB\u7EDF\u7684\u4EFB\u52A1\u7BA1\u7406\u5668\u5C31\u4F1A\u53D1\u73B0 cpu \u8D44\u6E90\u66B4\u589E\u3002</li></ul><p>\u663E\u7136\u5355\u7EAF\u7684<code>axios.post()</code>\u4E0D\u662F\u89E3\u51B3\u7684\u65B9\u6848\uFF0C\u4E5F\u4E00\u76F4\u542C\u5927\u725B\u4EEC\u8BF4\uFF1A<strong>\u5206\u7247\u4E0A\u4F20</strong>\uFF0C<strong>\u65AD\u70B9\u7EED\u4F20</strong>\u3002\u7EC8\u4E8E\u627E\u5230\u4E00\u7BC7\u975E\u5E38\u597D\u7684\u6398\u91D1\u5E16\u5B50]<a href="https://juejin.cn/post/7016498747496464415" target="_blank" rel="noopener noreferrer">\u6572\u8D77\u6765\uFF01Koa2 + Vue3 \u6F14\u7EC3\u5927\u6587\u4EF6\u5206\u7247\u4E0A\u4F20</a>\uFF0C\u597D\u5728 vue3 \u548C koa2 \u6211\u90FD\u8FD8\u7B97\u6BD4\u8F83\u719F\uFF0C\u4F1A\u4F7F\u7528\uFF0C\u975E\u5E38\u7684\u7B26\u5408\u81EA\u5DF1\u7684\u6280\u672F\u6808\uFF0C\u5C31\u8DDF\u7740\u5927\u725B\u7684\u6B65\u9AA4\u6572\u4E0B\u6765\uFF0C\u6536\u83B7\u9887\u4E30\uFF0C\u4F30\u501F\u6B64\u673A\u4F1A\u8FDB\u884C\u603B\u7ED3\u3002</p><h2 id="\u6587\u4EF6\u4E0A\u4F20\u601D\u8DEF" tabindex="-1">\u6587\u4EF6\u4E0A\u4F20\u601D\u8DEF <a class="header-anchor" href="#\u6587\u4EF6\u4E0A\u4F20\u601D\u8DEF" aria-hidden="true">#</a></h2><p>\u524D\u7AEF\u5206\u7247\u4E0A\u4F20\uFF0C\u540E\u7AEF\u63A5\u6536\uFF0C\u4E0A\u4F20\u5B8C\u6210\u4E4B\u540E\u540E\u7AEF\u5408\u5E76\u524D\u7AEF\u7684\u5207\u7247\u6062\u590D\u6E90\u6587\u4EF6\u3002</p><h3 id="\u524D\u7AEF" tabindex="-1">\u524D\u7AEF <a class="header-anchor" href="#\u524D\u7AEF" aria-hidden="true">#</a></h3><ul><li><p>\u524D\u7AEF\u5728\u901A\u8FC7<code>input</code>\u6216\u5176\u4ED6\u65B9\u5F0F\u62FF\u5230\u6587\u4EF6\u65F6\u5148\u5C06\u6587\u4EF6\u8FDB\u884C\u5207\u7247</p><p>\u6587\u4EF6<code>file</code>\u662F Blob \u4E8C\u8FDB\u5236\u5BF9\u8C61 \u53EF\u4EE5\u4F7F\u7528 file.slice \u5B9E\u73B0\u6587\u4EF6\u7684\u5207\u7247\uFF0C\u518D\u5C06\u5207\u7247\u7684\u4E00\u4E2A<code>Blob</code>\u6587\u4EF6\u5207\u7247\u5BF9\u8C61\u901A\u8FC7<code>spark-md5</code>\u8FD9\u4E2A\u5E93\u8FDB\u884C\u751F\u6210<code>Hash</code>\u503C\uFF0C\u8FD9\u4E2A\u662F\u4E3A\u4E86\u6807\u8BC6\uFF0C\u6BCF\u4E2A\u6587\u4EF6\u751F\u6210\u7684<code>hash</code>\u503C\u662F\u552F\u4E00\u7684\uFF01\uFF01\uFF01\u6700\u540E\u5229\u7528 FileReader \u6765\u8BFB\u53D6\u6587\u4EF6\u5207\u7247</p><div class="language-js"><pre><code><span class="token keyword">const</span> chunkSize <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span> <span class="token comment">// \u6BCF\u4E2A\u6587\u4EF6\u5206\u7247\u7684\u5927\u5C0F\u662F5M</span>

<span class="token comment">// currentFile\u662F\u5F53\u524D\u83B7\u53D6\u7684\u6587\u4EF6</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleUploadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fileList <span class="token operator">=</span> <span class="token function">createChunkList</span><span class="token punctuation">(</span>currentFile<span class="token punctuation">.</span>value<span class="token punctuation">.</span>raw<span class="token punctuation">,</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
  fileHash<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createMD5</span><span class="token punctuation">(</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5BF9\u6587\u4EF6\u8FDB\u884C\u5207\u7247</span>
<span class="token keyword">const</span> <span class="token function-variable function">createChunkList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> chunkSize</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fileChunkList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> cur <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">&lt;</span> file<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// file \u662FBlob\u4E8C\u8FDB\u5236\u5BF9\u8C61 \u53EF\u4EE5\u4F7F\u7528 file.slice \u5B9E\u73B0\u6587\u4EF6\u7684\u5207\u7247\u4E0A\u4F20</span>
    fileChunkList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>cur<span class="token punctuation">,</span> cur <span class="token operator">+</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cur <span class="token operator">+=</span> chunkSize<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> fileChunkList<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u751F\u6210\u6587\u4EF6\u54C8\u5E0C</span>
<span class="token keyword">import</span> SparkMD5 <span class="token keyword">from</span> <span class="token string">&#39;spark-md5&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">createMD5</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fileChunkList</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> slice <span class="token operator">=</span>
      <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice <span class="token operator">||</span>
      <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>mozSlice <span class="token operator">||</span>
      <span class="token class-name">File</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>webkitSlice<span class="token punctuation">;</span>
    <span class="token keyword">const</span> chunks <span class="token operator">=</span> fileChunkList<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> currentChunk <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> spark <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SparkMD5<span class="token punctuation">.</span>ArrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> fileReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BFB\u53D6\u6587\u4EF6\u5207\u7247</span>
    fileReader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      spark<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      currentChunk<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentChunk <span class="token operator">&lt;</span> chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">loadChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8BFB\u53D6\u5207\u7247\uFF0C\u8FD4\u56DE\u6700\u7EC8\u6587\u4EF6\u7684Hash\u503C</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>spark<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    fileReader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">loadChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fileReader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>fileChunkList<span class="token punctuation">[</span>currentChunk<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">loadChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u751F\u6210\u4E00\u4E2A<code>FormData</code>\u6570\u7EC4\uFF0C\u91CC\u9762\u5305\u542B\u6BCF\u4E2A\u5BF9\u8C61\u5305\u542B</p><ul><li><code>file</code>\uFF08\u5207\u7247\uFF09\uFF0C</li><li><code>chunkHash</code> \u5207\u7247\u5BF9\u5E94\u7684\u54C8\u5E0C</li><li><code>filehash</code> \u4E00\u6574\u4E2A\u6587\u4EF6\u5BF9\u5E94\u7684\u54C8\u5E0C</li></ul><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> fileHash <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> chunkFormData <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">handleUploadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fileList <span class="token operator">=</span> <span class="token function">createChunkList</span><span class="token punctuation">(</span>currentFile<span class="token punctuation">.</span>value<span class="token punctuation">.</span>raw<span class="token punctuation">,</span> chunkSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
  fileHash<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createMD5</span><span class="token punctuation">(</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> chunkList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      file<span class="token operator">:</span> file<span class="token punctuation">,</span>
      chunkHash<span class="token operator">:</span> fileHash<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> index<span class="token punctuation">,</span> <span class="token comment">// chunk\u54C8\u5E0C</span>
      fileHash<span class="token operator">:</span> fileHash<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token comment">// \u6587\u4EF6\u54C8\u5E0C</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  chunkFormData<span class="token punctuation">.</span>value <span class="token operator">=</span> chunkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;chunk&#39;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;chunkHash&#39;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">.</span>chunkHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;fileHash&#39;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">.</span>fileHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> formData <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u901A\u8FC7<code>Promise.all()</code>\u5E76\u53D1\u8BF7\u6C42\uFF0C\u5DF2\u8FBE\u5230\u6700\u5FEB\u7684\u4E0A\u4F20\u901F\u5EA6\u3002\u524D\u7AEF\u7684\u5207\u7247\u4E0A\u4F20\u5C31\u5B8C\u6210\u4E86\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">handleUploadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//...</span>
  chunkFormData<span class="token punctuation">.</span>value <span class="token operator">=</span> chunkList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;chunk&#39;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">.</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;chunkHash&#39;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">.</span>chunkHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
    formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;fileHash&#39;</span><span class="token punctuation">,</span> chunk<span class="token punctuation">.</span>fileHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> formData <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Promise.all() \u5E76\u53D1\u8BF7\u6C42</span>
  Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
    chunkFormData<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">postFile</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>formData<span class="token punctuation">,</span> <span class="token function">uploadProgress</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u5F53<code>Promise.all()</code>\u6267\u884C\u6210\u529F\u4E4B\u540E\uFF0C\u8BF7\u6C42\u5408\u5E76\u6587\u4EF6\u63A5\u53E3\uFF0C\u901A\u77E5\u540E\u7AEF\u5BF9\u6587\u4EF6\u8FDB\u884C\u5408\u5E76\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">handleUploadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
    chunkFormData<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">postFile</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>formData<span class="token punctuation">,</span> <span class="token function">uploadProgress</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6240\u6709\u7684\u5206\u7247\u90FD\u4E0A\u4F20\u5B8C\u6210\u4E4B\u540E  \u8C03\u7528\u5408\u5E76\u6587\u4EF6\u63A5\u53E3 \u4F20\u9012\u6587\u4EF6\u540D \u6587\u4EF6\u54C8\u5E0C chunk\u5927\u5C0F</span>
    <span class="token function">mergeFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      fileName<span class="token operator">:</span> currentFile<span class="token punctuation">.</span>value<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
      fileHash<span class="token operator">:</span> fileHash<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      chunkSize<span class="token operator">:</span> chunkSize<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      ConstantSourceNode<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li></ul><h3 id="\u540E\u7AEF" tabindex="-1">\u540E\u7AEF <a class="header-anchor" href="#\u540E\u7AEF" aria-hidden="true">#</a></h3><ul><li><p>\u540E\u7AEF\u63A5\u6536\u4E00\u4E2A\u4E2A\u7684<code>chunk</code>\uFF08\u5207\u7247\uFF09\uFF0C\u6839\u636E<code>filehash</code>\u6587\u4EF6\u54C8\u5E0C\u751F\u6210\u4E00\u4E2A\u5BF9\u5E94\u7684\u76EE\u5F55\uFF0C\u76EE\u5F55\u4E0B\u5B58\u653E\u4E00\u4E2A\u4E2A\u7684<code>chunk</code></p><div class="language-js"><pre><code><span class="token keyword">const</span> fsExtra <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">UPLOAD_DIR</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;files&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6587\u4EF6\u5B58\u50A8\u5728\u4E0A\u4E00\u7EA7\u76EE\u5F55\u7684 files \u6587\u4EF6\u5939\u4E0B</span>

router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/file&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5207\u7247\u5F97\u4ECEfiles\u5B57\u6BB5\u83B7\u53D6\uFF0C\u4E0D\u5728body\u4E2D \u57FA\u4E8E koa-body\u63D2\u4EF6</span>
  <span class="token keyword">const</span> file <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>files<span class="token punctuation">.</span>chunk<span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u6587\u4EF6Hash\u548C\u5207\u7247\u5E8F\u53F7</span>
  <span class="token keyword">const</span> body <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
  <span class="token keyword">const</span> fileHash <span class="token operator">=</span> body<span class="token punctuation">.</span>fileHash<span class="token punctuation">;</span>
  <span class="token keyword">const</span> chunkHash <span class="token operator">=</span> body<span class="token punctuation">.</span>chunkHash<span class="token punctuation">;</span>
  <span class="token keyword">const</span> chunkDir <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UPLOAD_DIR</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> chunkIndex <span class="token operator">=</span> chunkHash<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> chunkPath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">UPLOAD_DIR</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fileHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chunkIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  <span class="token comment">// \u4E0D\u5B58\u5728\u76EE\u5F55\uFF0C\u5219\u65B0\u5EFA\u76EE\u5F55</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fsExtra<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> fsExtra<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u8FD9\u91CC\u7684file.path\u4E3A\u4E0A\u4F20\u5207\u7247\u7684\u4E34\u65F6\u5730\u5740</span>
  <span class="token keyword">await</span> fsExtra<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>
    file<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
    path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">,</span> chunkHash<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span> code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> result<span class="token operator">:</span> <span class="token string">&#39;\u63A5\u6536\u6210\u529F&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>\u5F53\u63A5\u6536\u5230\u524D\u7AEF\u53D1\u8D77\u7684\u5408\u5E76\u6587\u4EF6\u8BF7\u6C42\u4E4B\u540E\uFF0C\u901A\u8FC7<code>Stream</code>\u6D41\u7684\u65B9\u5F0F\u6765\u5408\u5E76\u6587\u4EF6\u3002\u8FD9\u91CC\u897F\u836F\u5206\u522B\u521B\u5EFA\u53EF\u8BFB\u6D41\u548C\u53EF\u5199\u6D41\u3002</p><div class="language-js"><pre><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/mergeFile&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> fileName<span class="token punctuation">,</span> fileHash<span class="token punctuation">,</span> chunkSize <span class="token punctuation">}</span> <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
  <span class="token keyword">const</span> chunkDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> fileHash<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// console.log(&quot;params&quot;, fileName, fileHash, chunkSize);</span>
  <span class="token comment">// \u8BFB\u53D6\u6587\u4EF6\u5939\u4E0B\u6240\u6709\u7684\u5206\u7247</span>
  <span class="token keyword">const</span> chunkPaths <span class="token operator">=</span> <span class="token keyword">await</span> fsExtra<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> chunkNumber <span class="token operator">=</span> chunkPaths<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5207\u7247\u6392\u5E8F \u9632\u6B62\u4E71\u5E8F</span>
  chunkPaths<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  chunkPaths<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">chunk<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> chunkPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_DIR</span><span class="token punctuation">,</span> fileHash<span class="token punctuation">,</span> chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u53EF\u5199\u6D41</span>
    <span class="token keyword">const</span> writeStream <span class="token operator">=</span> fsExtra<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>fileHash <span class="token operator">+</span> fileName<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      start<span class="token operator">:</span> index <span class="token operator">*</span> chunkSize<span class="token punctuation">,</span>
      end<span class="token operator">:</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> chunkSize<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u53EF\u8BFB\u6D41</span>
    <span class="token keyword">const</span> readStream <span class="token operator">=</span> fsExtra<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>chunkPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    readStream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5220\u9664\u5207\u7247\u6587\u4EF6</span>
      fsExtra<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>chunkPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5220\u9664\u5207\u7247\u6587\u4EF6\u5939</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">===</span> chunkNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fsExtra<span class="token punctuation">.</span><span class="token function">rmdirSync</span><span class="token punctuation">(</span>chunkDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> uploadedFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>
          __dirname<span class="token punctuation">,</span>
          <span class="token string">&#39;..&#39;</span><span class="token punctuation">,</span>
          fileHash <span class="token operator">+</span> fileName
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        fsExtra<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>
          uploadedFilePath<span class="token punctuation">,</span>
          <span class="token constant">UPLOAD_DIR</span> <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> fileHash <span class="token operator">+</span> fileName
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    readStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writeStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span> code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> result<span class="token operator">:</span> <span class="token string">&#39;\u63A5\u6536\u6210\u529F&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li></ul><h2 id="\u8FDB\u5EA6\u6761\u7684\u663E\u793A" tabindex="-1">\u8FDB\u5EA6\u6761\u7684\u663E\u793A <a class="header-anchor" href="#\u8FDB\u5EA6\u6761\u7684\u663E\u793A" aria-hidden="true">#</a></h2><p>\u5728\u5927\u6587\u4EF6\u4E0A\u4F20\u65F6\uFF0C\u56E0\u4E3A\u662F\u4E00\u4E2A\u8017\u65F6\u7684\u64CD\u4F5C\uFF0C\u5C24\u5176\u662F\u5F53\u7528\u6237\u7684\u7F51\u7EDC\u72B6\u6001\u4E0D\u4F73\u7684\u65F6\u5019\uFF0C\u8FD9\u65F6\u5019\u5C31\u975E\u5E38\u9700\u8981\u4E00\u4E2A\u4F18\u96C5\u7684\u8FDB\u5EA6\u6761\u4E86\uFF0C\u6BD5\u7ADF\u524D\u7AEF\u6700\u91CD\u8981\u7684\u4E8B\u60C5\u5C31\u662F\u8981\u7ED9\u7528\u6237\u6700\u53CB\u597D\u7684\u4F53\u9A8C\u3002</p><h3 id="\u901A\u8FC7onuploadprogress\u4E8B\u4EF6\u6765\u76D1\u542C\u53D8\u5316" tabindex="-1">\u901A\u8FC7<code>onUploadProgress</code>\u4E8B\u4EF6\u6765\u76D1\u542C\u53D8\u5316 <a class="header-anchor" href="#\u901A\u8FC7onuploadprogress\u4E8B\u4EF6\u6765\u76D1\u542C\u53D8\u5316" aria-hidden="true">#</a></h3><p>\u5728\u539F\u751F\u7684<code>ajax</code>\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>onProgress</code>\u4E8B\u4EF6\u6765\u76D1\u542C\u53D8\u5316\uFF0Caxios \u5728\u8FD9\u57FA\u7840\u4E0A\u8FDB\u884C\u4E86\u5C01\u88C5\u4E86\u4E00\u4E2A<code>onUploadProgress</code>\u4E8B\u4EF6\uFF0C\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\uFF0C\u5F53\u4E0A\u4F20\u8FDB\u5EA6\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\u5C31\u4F1A\u6267\u884C\u8FD9\u4E2A\u51FD\u6570\uFF0C\u6240\u4EE5\u6539\u53D8\u8FDB\u5EA6\u6761\u663E\u793A\u7684\u5185\u5BB9\u662F\u5E94\u8BE5\u5199\u5728\u8FD9\u4E2A\u4E8B\u4EF6\u91CC\u9762\u3002</p><div class="language-js"><pre><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> service <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  baseURL<span class="token operator">:</span> <span class="token string">&#39;http://127.0.0.1:666/&#39;</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
  <span class="token comment">// headers: { &#39;X-Requested-With&#39;: &#39;XMLHttpRequest&#39; },</span>
  <span class="token comment">// withCredentials: true,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">postFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> conf</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    url<span class="token operator">:</span> <span class="token string">&#39;http://127.0.0.1:666/upload/file&#39;</span><span class="token punctuation">,</span>
    method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
    data<span class="token operator">:</span> file<span class="token punctuation">,</span>
    <span class="token comment">// \u4E0A\u4F20\u8FDB\u5EA6\u4E8B\u4EF6 \u662F\u4E00\u4E2A\u51FD\u6570 \u8FD9\u4E2A\u51FD\u6570\u6240\u5904\u7406\u7684 \u5C31\u662F\u8FDB\u5EA6\u6761\u7684\u5185\u5BB9</span>
    onUploadProgress<span class="token operator">:</span> conf<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u91CC\u591A\u63D0\u4E00\u53E5\uFF0C\u53D1\u8BF7\u6C42\u65F6\u8FC7\u53BB\u6211\u559C\u6B22\u76F4\u63A5<code>axios.get()</code>\u6216\u8005<code>axios.post()</code>\u8FD9\u6837\u5176\u5B9E\u5E76\u4E0D\u7075\u6D3B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u662F\u4F7F\u7528<code>axios.create()</code>\u521B\u5EFA\u4E00\u4E2A<code>axios</code>\u5B9E\u4F8B\uFF0C\u518D\u5BF9\u8FD9\u4E2A\u5B9E\u4F8B\u8FDB\u884C\u4E00\u4E9B\u914D\u7F6E\u662F\u66F4\u52A0\u7075\u6D3B\u7684\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">uploadProgress</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A \u51FD\u6570  \u8FD9\u4E2A\u51FD\u6570\u4F1A\u5728\u4E0A\u4F20\u8FDB\u5EA6\u66F4\u6539\u65F6\u89E6\u53D1</span>
  <span class="token comment">// \u5904\u7406\u8FDB\u5EA6\u6761\u7684\u663E\u793A</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
  chunkFormData<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">postFile</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>formData<span class="token punctuation">,</span> <span class="token function">uploadProgress</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>\u8FD9\u4E48\u4E00\u5957\u4EE3\u7801\u4E0B\u6765\uFF0C\u8DDF\u7740\u5927\u4F6C\u7684\u4EE3\u7801\u5199\u4E0B\u6765\uFF0C\u52A0\u4E0A\u4E00\u8DEF\u89E3\u51B3 bug \u5199\u4E86\u5FEB\u4E00\u4E0B\u5348\uFF0C\u7EC8\u4E8E\u662F\u5B8C\u6574\u7684\u5199\u51FA\u6765\u4E86\uFF0C\u6536\u83B7\u5F88\u5927\uFF0C\u5E94\u4ED8\u9762\u8BD5\u5E94\u8BE5\u662F\u6CA1\u6709\u95EE\u9898\u4E86\u3002</p>`,19),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var m=n(t,[["render",e]]);export{h as __pageData,m as default};
